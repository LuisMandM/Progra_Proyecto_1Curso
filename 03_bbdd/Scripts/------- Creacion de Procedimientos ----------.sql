------- Creacion de Procedimientos ---------


---PROCEDURES----


--PACKAGE VISUALIZACION

	CREATE OR REPLACE PROCEDURE HISTORIAL_EQUIPO
		(P_EQUIPO IN EQUIPO.ID_EQUIPO%TYPE, GANADOS OUT NUMBER,PERDIDOS OUT NUMBER, 
		EMPATE OUT NUMBER)
		IS
		BEGIN
			
			SELECT COUNT(*) INTO GANADOS FROM PARTIDO WHERE GANADOR = P_EQUIPO;
			SELECT COUNT(*)INTO PERDIDOS FROM PARTIDO WHERE GANADOR != P_EQUIPO AND
			(EQUIPO_LOCAL = P_EQUIPO OR EQUIPO_VISITANTE = P_EQUIPO);
			SELECT COUNT(*) INTO EMPATE FROM PARTIDO WHERE GANADOR = -1 AND 
			 (EQUIPO_LOCAL = P_EQUIPO OR EQUIPO_VISITANTE = P_EQUIPO);
			
			EXCEPTION
			WHEN NO_DATA_FOUND THEN
				RAISE_APPLICATION_ERROR(-20381,'SIN DATOS');
		
	END HISTORIAL_EQUIPO;
	
	
	CREATE OR REPLACE PROCEDURE HISTORIAL_EQUIPO_TEMP
		(P_EQUIPO IN EQUIPO.ID_EQUIPO%TYPE, P_TEMPORADA IN CALENDARIO.ID_TEMPORADA%TYPE,
		GANADOS OUT NUMBER,PERDIDOS OUT NUMBER, 
		EMPATE OUT NUMBER)
		IS

		BEGIN
			GANADOS := 0;
			PERDIDOS := 0;
			EMPATE := 0;

			FOR JORNADA_RECORD IN (SELECT GANADOR, MARCADOR_LOCAL, MARCADOR_VISITANTE, 
			EQUIPO_LOCAL, EQUIPO_VISITANTE FROM PARTIDO NATURAL JOIN JORNADA WHERE 
			ID_TEMPORADA = P_TEMPORADA AND 
			(EQUIPO_LOCAL = P_EQUIPO OR EQUIPO_VISITANTE = P_EQUIPO)) LOOP
			
				IF JORNADA_RECORD.GANADOR = P_EQUIPO THEN
					GANADOS := GANADOS +1;
				ELSIF JORNADA_RECORD.GANADOR != P_EQUIPO THEN
					PERDIDOS := PERDIDOS +1;
				ELSIF JORNADA_RECORD.GANADOR = -1 THEN
					EMPATE := EMPATE + 1;
					
				END IF;
			END LOOP;
			
			EXCEPTION
			WHEN NO_DATA_FOUND THEN
				RAISE_APPLICATION_ERROR(-20382,'SIN DATOS');
			
		END HISTORIAL_EQUIPO_TEMP;

    CREATE  OR REPLACE PROCEDURE clasificacion
            (resul_out   out SYS_REFCURSOR)
        IS
            BEGIN
            OPEN resul_out FOR
                SELECT equi.nombre, equi.id_equipo, COUNT(parti.ganador) AS "NUM_GANADOS" FROM equipo equi
                    LEFT JOIN partido parti
                        ON
                            parti.ganador = equi.id_equipo
                GROUP BY equi.id_equipo, equi.nombre;
    END clasificacion;


CREATE OR REPLACE PROCEDURE RESULTADOS_DE_LA_JORNADA
  (P_NUMJORNADA PARTIDO.JORNADA%TYPE,P_RESULT_CURSOR OUT Sys_Refcursor)
IS
BEGIN

    IF P_NUMJORNADA%FOUND
        OPEN P_RESULT_CURSOR FOR
           'SELECT MARCADOR_LOCAL,EQUIPO_LOCAL,
            MARCADOR_VISITANTE,EQUIPO_VISITANTE
            FROM PARTIDO
            WHERE JORNADA= P_NUMJORNADA';
    ELSE   
        RAISE_APPLICATION_ERROR(-203020, 'ERROR, jornada seleccionada no encontrada en el sistema');    
    END IF;
    CLOSE P_RESULT_CURSOR; 
END RESULTADOS_DE_LA_JORNADA;


--Autenticacion

CREATE OR REPLACE PROCEDURE AUTENTICACION_ADMIN(
    P_USER IN ADMINISTRADOR.USUARIO%TYPE, P_PASS IN VARCHAR2, STATUS OUT NUMBER)
    IS
    V_PASSWORDHEX VARCHAR2;
    V_USUARIO ADMINISTRADOR.USUARIO%TYPE;
    BEGIN
    SELECT USUARIO INTO V_USUARIO FROM ADMINISTRADOR WHERE USUARIO = P_USER;
    
    IF V_USUARIO IS NOT NULL THEN
        SELECT RAWTOHEX(CONTRASEÑA)INTO V_PASSWORDHEX  FROM ADMINISTRADOR WHERE 
        USUARIO = P_USER;
        IF V_PASSWORDHEX = P_PASS THEN
            STATUS := 10;
        ELSE
            STATUS := -1;
        END IF;
    END IF;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
         STATUS := -404;
END AUTENTICACION_ADMIN;


CREATE OR REPLACE PROCEDURE AUTENTICACION_DUENIO(
    P_USER IN DUEÑO.USUARIO%TYPE, P_PASS IN VARCHAR2, STATUS OUT NUMBER)
    IS
    V_PASSWORDHEX VARCHAR2;
    V_USUARIO DUEÑO.USUARIO%TYPE;
    BEGIN
    SELECT USUARIO INTO V_USUARIO FROM DUEÑO WHERE USUARIO = P_USER;
    
    IF V_USUARIO IS NOT NULL THEN
        SELECT RAWTOHEX(CONTRASEÑA)INTO V_PASSWORDHEX  FROM DUEÑO WHERE 
        USUARIO = P_USER;
        IF V_PASSWORDHEX = P_PASS THEN
            STATUS := 20;
        ELSE
            STATUS := -1;
        END IF;
    END IF;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
         STATUS := -404;
END AUTENTICACION_DUENIO;



CREATE OR REPLACE PROCEDURE AUTENTICACION_CLIENTE(
    P_USER IN CLIENTE.USUARIO%TYPE, P_PASS IN VARCHAR2, STATUS OUT NUMBER)
    IS
    V_PASSWORDHEX VARCHAR2;
    V_USUARIO CLIENTE.USUARIO%TYPE;
    BEGIN
    SELECT USUARIO INTO V_USUARIO FROM CLIENTE WHERE USUARIO = P_USER;
    
    IF V_USUARIO IS NOT NULL THEN
        SELECT RAWTOHEX(CONTRASEÑA)INTO V_PASSWORDHEX  FROM CLIENTE WHERE 
        USUARIO = P_USER;
        IF V_PASSWORDHEX = P_PASS THEN
            STATUS := 30;
        ELSE
            STATUS := -1;
        END IF;
    END IF;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
         STATUS := -404;
END AUTENTICACION_CLIENTE;
