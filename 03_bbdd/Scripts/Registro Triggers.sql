--Script de Registro de Triggers almacenados.
CREATE OR REPLACE TRIGGER CONTROL_DUEÑOS_VIEW
INSTEAD OF DELETE ON VISTA_DUEÑO
FOR EACH ROW
BEGIN
    UPDATE DUEÑO SET DISPONIBILIDAD = 'D' WHERE ID_DUEÑO = :OLD.ID_DUEÑO;
END;

--PRUEBA
SELECT * FROM DUEÑO;
SELECT * FROM VISTA_DUEÑO;
ROLLBACK;
DELETE FROM VISTA_DUEÑO WHERE ID_DUEÑO = 31;
UPDATE DUEÑO SET DISPONIBILIDAD ='E' WHERE ID_DUEÑO =31;
COMMIT;

--VISTA EQUUIPOS
CREATE OR REPLACE TRIGGER CONTROL_EQUIPOS_VIEW
INSTEAD OF DELETE ON VISTA_EQUIPO
FOR EACH ROW
BEGIN
    UPDATE EQUIPO SET DISPONIBILIDAD = 'D' WHERE ID_EQUIPO = :OLD.ID_EQUIPO;
END CONTROL_EQUIPOS_VIEW; 
--PRUEBA
SELECT * FROM EQUIPO;
SELECT * FROM VISTA_EQUIPO;
ROLLBACK;
DELETE FROM VISTA_EQUIPO WHERE ID_EQUIPO = 401;

/*
Trigger en tabla Jugador Usado para evitar que el 
sueldo incumpla la restriccion de ser menor que el salario minimo interprofesional
*/
CREATE OR REPLACE TRIGGER CONTROL_SALARIOS
BEFORE INSERT OR UPDATE OF SUELDO ON JUGADOR
FOR EACH ROW
BEGIN
IF :NEW.SUELDO < 1080 THEN
    RAISE_APPLICATION_ERROR(-20100, 'VALOR DE SALARIO INCORRECTO, 
    NO PUEDE SER MENOR A 1080€');
END IF;
END;



--NO FUNCIONA
CREATE OR REPLACE TRIGGER CONTROL_DUEÑOS_COMP
FOR DELETE ON DUEÑO COMPOUND TRIGGER
V_USER DUEÑO.ID_DUEÑO%TYPE;

    BEFORE EACH ROW IS BEGIN
    V_USER := :OLD.ID_DUEÑO;
    END BEFORE EACH ROW;
    
    AFTER EACH ROW IS BEGIN
    UPDATE DUEÑO SET DISPONIBILIDAD = 'E' WHERE ID_DUEÑO = V_USER;
    END AFTER EACH ROW;

END CONTROL_DUEÑOS_COMP;
